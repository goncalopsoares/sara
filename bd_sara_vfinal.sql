-- MySQL Script generated by MySQL Workbench
-- Wed May 15 11:46:48 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sara
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sara
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sara` DEFAULT CHARACTER SET utf8 ;
USE `sara` ;

-- -----------------------------------------------------
-- Table `sara`.`marca_equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`marca_equipamento` (
  `id_marca_equipamento` INT NOT NULL AUTO_INCREMENT,
  `nome_marca_equipamento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_marca_equipamento`),
  UNIQUE INDEX `id_marca_equipamento_UNIQUE` (`id_marca_equipamento` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`modelo_equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`modelo_equipamento` (
  `id_modelo_equipamento` INT NOT NULL AUTO_INCREMENT,
  `nome_modelo_equipamento` VARCHAR(45) NOT NULL,
  `descricao_modelo_equipamento` MEDIUMTEXT NULL,
  `imagem_modelo_equipamento` VARCHAR(45) NULL,
  `especificacoes_modelo_equipamento` MEDIUMTEXT NULL,
  `aplicablidade_modelo_equipamento` MEDIUMTEXT NULL,
  `cuidados_modelo_equipamento` MEDIUMTEXT NULL,
  `marca_equipamento_id_marca_equipamento` INT NOT NULL,
  PRIMARY KEY (`id_modelo_equipamento`),
  UNIQUE INDEX `id_modelo_equipamento_UNIQUE` (`id_modelo_equipamento` ASC) ,
  INDEX `fk_modelo_equipamento_marca1_idx` (`marca_equipamento_id_marca_equipamento` ASC) ,
  CONSTRAINT `fk_modelo_equipamento_marca1`
    FOREIGN KEY (`marca_equipamento_id_marca_equipamento`)
    REFERENCES `sara`.`marca_equipamento` (`id_marca_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`equipamento` (
  `id_equipamento` INT NOT NULL AUTO_INCREMENT,
  `id_interno_equipamento` VARCHAR(30) NOT NULL,
  `numero_serie_equipamento` VARCHAR(30) NULL,
  `numero_inventario_equipamento` INT NULL,
  `data_aquisicao_equipamento` DATE NULL,
  `disponibilidade_equipamento` ENUM('Disponível', 'Indisponível') NOT NULL,
  `observacoes_equipamento` TINYTEXT NULL,
  `modelo_equipamento_id_modelo_equipamento` INT NOT NULL,
  PRIMARY KEY (`id_equipamento`),
  UNIQUE INDEX `id_material_UNIQUE` (`id_equipamento` ASC) ,
  UNIQUE INDEX `numero_serie_material_UNIQUE` (`numero_serie_equipamento` ASC) ,
  UNIQUE INDEX `numero_inventario_material_UNIQUE` (`numero_inventario_equipamento` ASC) ,
  INDEX `fk_equipamento_modelo_equipamento1_idx` (`modelo_equipamento_id_modelo_equipamento` ASC) ,
  CONSTRAINT `fk_equipamento_modelo_equipamento1`
    FOREIGN KEY (`modelo_equipamento_id_modelo_equipamento`)
    REFERENCES `sara`.`modelo_equipamento` (`id_modelo_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`espaco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`espaco` (
  `id_espaco` INT NOT NULL AUTO_INCREMENT,
  `nome_espaco` VARCHAR(45) NULL,
  `sala_espaco` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_espaco`),
  UNIQUE INDEX `id_espaco_UNIQUE` (`id_espaco` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`uc_contexto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`uc_contexto` (
  `id_uc_contexto` INT NOT NULL AUTO_INCREMENT,
  `nome_uc_contexto` VARCHAR(150) NOT NULL,
  `sigla_uc_contexto` VARCHAR(10) NULL,
  `icone_uc_contexto` VARCHAR(45) NOT NULL,
  `codigo_uc_contexto` VARCHAR(100) NULL,
  `semestre_uc_contexto` TINYINT NULL,
  PRIMARY KEY (`id_uc_contexto`),
  UNIQUE INDEX `id_uc_UNIQUE` (`id_uc_contexto` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`requisicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`requisicao` (
  `id_requisicao` INT NOT NULL AUTO_INCREMENT,
  `nome_requisicao` VARCHAR(45) NOT NULL,
  `contexto_requisicao` TEXT NOT NULL,
  `tipo_requisicao` ENUM('Equipamento', 'Espaço') NOT NULL,
  `espaco_id_espaco` INT NULL,
  `comentario_professor_requisicao` TEXT NULL,
  `comentario_sara_requisicao` TEXT NULL,
  `comentario_aluno_requisicao` TEXT NULL,
  `avaliacao_requisicao` TINYINT(1) NULL,
  `uc_contexto_id_uc_contexto` INT NOT NULL,
  PRIMARY KEY (`id_requisicao`),
  UNIQUE INDEX `id_requisicao_UNIQUE` (`id_requisicao` ASC) ,
  INDEX `fk_requisicao_espaco1_idx` (`espaco_id_espaco` ASC) ,
  INDEX `fk_requisicao_uc1_idx` (`uc_contexto_id_uc_contexto` ASC) ,
  CONSTRAINT `fk_requisicao_espaco1`
    FOREIGN KEY (`espaco_id_espaco`)
    REFERENCES `sara`.`espaco` (`id_espaco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_requisicao_uc1`
    FOREIGN KEY (`uc_contexto_id_uc_contexto`)
    REFERENCES `sara`.`uc_contexto` (`id_uc_contexto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`utilizador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`utilizador` (
  `id_utilizador` INT NOT NULL AUTO_INCREMENT,
  `nome_utilizador` VARCHAR(100) NOT NULL,
  `email_utilizador` VARCHAR(100) NOT NULL,
  `numero_mecanografico_utilizador` INT NOT NULL,
  `tipo_utilizador` TINYINT(1) NOT NULL,
  `avatar_utilizador` VARCHAR(45) NULL,
  `password_utilizador` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_utilizador`),
  UNIQUE INDEX `id_utilizadores_UNIQUE` (`id_utilizador` ASC) ,
  UNIQUE INDEX `numero_mecanografico_utilizador_UNIQUE` (`numero_mecanografico_utilizador` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`anomalia_plataforma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`anomalia_plataforma` (
  `id_anomalia_plataforma` INT NOT NULL AUTO_INCREMENT,
  `descricao_anomalia_plataforma` MEDIUMTEXT NOT NULL,
  `estado_anomalia_plataforma` ENUM('Resolvida', 'Por resolver') NOT NULL,
  `data_anomalia_plataforma` DATETIME NOT NULL,
  `utilizador_id_utilizador` INT NOT NULL,
  PRIMARY KEY (`id_anomalia_plataforma`),
  UNIQUE INDEX `id_anomalia_UNIQUE` (`id_anomalia_plataforma` ASC) ,
  INDEX `fk_anomalia_utilizador1_idx` (`utilizador_id_utilizador` ASC) ,
  CONSTRAINT `fk_anomalia_utilizador1`
    FOREIGN KEY (`utilizador_id_utilizador`)
    REFERENCES `sara`.`utilizador` (`id_utilizador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`estado` (
  `id_estado` INT NOT NULL AUTO_INCREMENT,
  `nome_estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_estado`),
  UNIQUE INDEX `id_estado_UNIQUE` (`id_estado` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`requisicao_has_equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`requisicao_has_equipamento` (
  `requisicao_id_requisicao` INT NOT NULL,
  `equipamento_id_equipamento` INT NOT NULL,
  `reportar_anomalias` MEDIUMTEXT NULL,
  `comentarios` MEDIUMTEXT NULL,
  `data_inicio_requisicao` DATETIME NOT NULL,
  `data_fim_requisicao` DATETIME NOT NULL,
  PRIMARY KEY (`requisicao_id_requisicao`, `equipamento_id_equipamento`),
  INDEX `fk_material_has_requisicao_requisicao1_idx` (`requisicao_id_requisicao` ASC) ,
  INDEX `fk_material_has_requisicao_material1_idx` (`equipamento_id_equipamento` ASC) ,
  CONSTRAINT `fk_material_has_requisicao_material1`
    FOREIGN KEY (`equipamento_id_equipamento`)
    REFERENCES `sara`.`equipamento` (`id_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_has_requisicao_requisicao1`
    FOREIGN KEY (`requisicao_id_requisicao`)
    REFERENCES `sara`.`requisicao` (`id_requisicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`requisicao_has_estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`requisicao_has_estado` (
  `requisicao_id_requisicao` INT NOT NULL,
  `estado_id_estado` INT NOT NULL,
  `data_estado` TIMESTAMP NOT NULL,
  PRIMARY KEY (`requisicao_id_requisicao`, `estado_id_estado`),
  INDEX `fk_requisicao_has_estado_estado1_idx` (`estado_id_estado` ASC) ,
  INDEX `fk_requisicao_has_estado_requisicao1_idx` (`requisicao_id_requisicao` ASC) ,
  CONSTRAINT `fk_requisicao_has_estado_requisicao1`
    FOREIGN KEY (`requisicao_id_requisicao`)
    REFERENCES `sara`.`requisicao` (`id_requisicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_requisicao_has_estado_estado1`
    FOREIGN KEY (`estado_id_estado`)
    REFERENCES `sara`.`estado` (`id_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`kits_equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`kits_equipamento` (
  `id_kits_equipamento` INT NOT NULL AUTO_INCREMENT,
  `nome_kits_equipamento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_kits_equipamento`),
  UNIQUE INDEX `id_kits_material_UNIQUE` (`id_kits_equipamento` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`equipamento_has_uc`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`equipamento_has_uc` (
  `equipamento_id_equipamento` INT NOT NULL,
  `uc_id_uc` INT NOT NULL,
  `kits_equipamento_id_kits_equipamento` INT NULL,
  PRIMARY KEY (`equipamento_id_equipamento`, `uc_id_uc`),
  INDEX `fk_material_has_uc_uc1_idx` (`uc_id_uc` ASC) ,
  INDEX `fk_material_has_uc_material1_idx` (`equipamento_id_equipamento` ASC) ,
  INDEX `fk_material_has_uc_kits_material1_idx` (`kits_equipamento_id_kits_equipamento` ASC) ,
  CONSTRAINT `fk_material_has_uc_material1`
    FOREIGN KEY (`equipamento_id_equipamento`)
    REFERENCES `sara`.`equipamento` (`id_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_has_uc_uc1`
    FOREIGN KEY (`uc_id_uc`)
    REFERENCES `sara`.`uc_contexto` (`id_uc_contexto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_material_has_uc_kits_material1`
    FOREIGN KEY (`kits_equipamento_id_kits_equipamento`)
    REFERENCES `sara`.`kits_equipamento` (`id_kits_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`uc_contexto_has_utilizador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`uc_contexto_has_utilizador` (
  `uc_contexto_id_uc_contexto` INT NOT NULL,
  `utilizador_id_utilizador` INT NOT NULL,
  PRIMARY KEY (`uc_contexto_id_uc_contexto`, `utilizador_id_utilizador`),
  INDEX `fk_uc_has_utilizador_utilizador1_idx` (`utilizador_id_utilizador` ASC) ,
  INDEX `fk_uc_has_utilizador_uc1_idx` (`uc_contexto_id_uc_contexto` ASC) ,
  CONSTRAINT `fk_uc_has_utilizador_uc1`
    FOREIGN KEY (`uc_contexto_id_uc_contexto`)
    REFERENCES `sara`.`uc_contexto` (`id_uc_contexto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_uc_has_utilizador_utilizador1`
    FOREIGN KEY (`utilizador_id_utilizador`)
    REFERENCES `sara`.`utilizador` (`id_utilizador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nome_categoria` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_categoria`),
  UNIQUE INDEX `id_categoria_UNIQUE` (`id_categoria` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`sub_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`sub_categoria` (
  `id_sub_categoria` INT NOT NULL AUTO_INCREMENT,
  `nome_sub_categoria` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_sub_categoria`),
  UNIQUE INDEX `id_sub_categoria_UNIQUE` (`id_sub_categoria` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`requisicao_has_utilizador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`requisicao_has_utilizador` (
  `requisicao_id_requisicao` INT NOT NULL,
  `utilizador_id_utilizador` INT NOT NULL,
  `role_utilizador` TINYINT(1) NOT NULL,
  `pin_recolha` VARCHAR(4) NOT NULL,
  `pin_devolucao` VARCHAR(4) NOT NULL,
  PRIMARY KEY (`requisicao_id_requisicao`, `utilizador_id_utilizador`),
  INDEX `fk_requisicao_has_utilizador_utilizador1_idx` (`utilizador_id_utilizador` ASC) ,
  INDEX `fk_requisicao_has_utilizador_requisicao1_idx` (`requisicao_id_requisicao` ASC) ,
  CONSTRAINT `fk_requisicao_has_utilizador_requisicao1`
    FOREIGN KEY (`requisicao_id_requisicao`)
    REFERENCES `sara`.`requisicao` (`id_requisicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_requisicao_has_utilizador_utilizador1`
    FOREIGN KEY (`utilizador_id_utilizador`)
    REFERENCES `sara`.`utilizador` (`id_utilizador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`equipamento_has_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`equipamento_has_categoria` (
  `equipamento_id_equipamento` INT NOT NULL,
  `categoria_id_categoria` INT NOT NULL,
  PRIMARY KEY (`equipamento_id_equipamento`, `categoria_id_categoria`),
  INDEX `fk_equipamento_has_categoria_categoria1_idx` (`categoria_id_categoria` ASC) ,
  INDEX `fk_equipamento_has_categoria_equipamento1_idx` (`equipamento_id_equipamento` ASC) ,
  CONSTRAINT `fk_equipamento_has_categoria_equipamento1`
    FOREIGN KEY (`equipamento_id_equipamento`)
    REFERENCES `sara`.`equipamento` (`id_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_equipamento_has_categoria_categoria1`
    FOREIGN KEY (`categoria_id_categoria`)
    REFERENCES `sara`.`categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`equipamento_has_sub_categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`equipamento_has_sub_categoria` (
  `equipamento_id_equipamento` INT NOT NULL,
  `sub_categoria_id_sub_categoria` INT NOT NULL,
  PRIMARY KEY (`equipamento_id_equipamento`, `sub_categoria_id_sub_categoria`),
  INDEX `fk_sub_categoria_has_equipamento_equipamento1_idx` (`equipamento_id_equipamento` ASC) ,
  INDEX `fk_sub_categoria_has_equipamento_sub_categoria1_idx` (`sub_categoria_id_sub_categoria` ASC) ,
  CONSTRAINT `fk_sub_categoria_has_equipamento_sub_categoria1`
    FOREIGN KEY (`sub_categoria_id_sub_categoria`)
    REFERENCES `sara`.`sub_categoria` (`id_sub_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sub_categoria_has_equipamento_equipamento1`
    FOREIGN KEY (`equipamento_id_equipamento`)
    REFERENCES `sara`.`equipamento` (`id_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`aspeto_positivo_requisicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`aspeto_positivo_requisicao` (
  `id_aspeto_positivo_requisicao` INT NOT NULL AUTO_INCREMENT,
  `nome_aspeto_positivo_requisicao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_aspeto_positivo_requisicao`),
  UNIQUE INDEX `id_aspetos_positivos_requisicao_UNIQUE` (`id_aspeto_positivo_requisicao` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`aspeto_negativo_requisicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`aspeto_negativo_requisicao` (
  `id_aspeto_negativo_requisicao` INT NOT NULL AUTO_INCREMENT,
  `nome_aspeto_negativo_requisicao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_aspeto_negativo_requisicao`),
  UNIQUE INDEX `id_aspetos_positivos_requisicao_UNIQUE` (`id_aspeto_negativo_requisicao` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`requisicao_has_aspeto_negativo_requisicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`requisicao_has_aspeto_negativo_requisicao` (
  `requisicao_id_requisicao` INT NULL,
  `aspeto_negativo_requisicao_id_aspeto_negativo_requisicao` INT NULL,
  PRIMARY KEY (`requisicao_id_requisicao`, `aspeto_negativo_requisicao_id_aspeto_negativo_requisicao`),
  INDEX `fk_requisicao_has_aspetos_negativos_requisicao_aspetos_nega_idx` (`aspeto_negativo_requisicao_id_aspeto_negativo_requisicao` ASC) ,
  INDEX `fk_requisicao_has_aspetos_negativos_requisicao_requisicao1_idx` (`requisicao_id_requisicao` ASC) ,
  CONSTRAINT `fk_requisicao_has_aspetos_negativos_requisicao_requisicao1`
    FOREIGN KEY (`requisicao_id_requisicao`)
    REFERENCES `sara`.`requisicao` (`id_requisicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_requisicao_has_aspetos_negativos_requisicao_aspetos_negati1`
    FOREIGN KEY (`aspeto_negativo_requisicao_id_aspeto_negativo_requisicao`)
    REFERENCES `sara`.`aspeto_negativo_requisicao` (`id_aspeto_negativo_requisicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`requisicao_has_aspeto_positivo_requisicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`requisicao_has_aspeto_positivo_requisicao` (
  `requisicao_id_requisicao` INT NULL,
  `aspeto_positivo_requisicao_id_aspeto_positivo_requisicao` INT NULL,
  PRIMARY KEY (`requisicao_id_requisicao`, `aspeto_positivo_requisicao_id_aspeto_positivo_requisicao`),
  INDEX `fk_aspetos_positivos_requisicao_has_requisicao_requisicao1_idx` (`requisicao_id_requisicao` ASC) ,
  INDEX `fk_aspetos_positivos_requisicao_has_requisicao_aspetos_posi_idx` (`aspeto_positivo_requisicao_id_aspeto_positivo_requisicao` ASC) ,
  CONSTRAINT `fk_aspetos_positivos_requisicao_has_requisicao_aspetos_positi1`
    FOREIGN KEY (`aspeto_positivo_requisicao_id_aspeto_positivo_requisicao`)
    REFERENCES `sara`.`aspeto_positivo_requisicao` (`id_aspeto_positivo_requisicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aspetos_positivos_requisicao_has_requisicao_requisicao1`
    FOREIGN KEY (`requisicao_id_requisicao`)
    REFERENCES `sara`.`requisicao` (`id_requisicao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`notificacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`notificacao` (
  `id_notificacao` INT NOT NULL AUTO_INCREMENT,
  `descricao_notificacao` TINYTEXT NOT NULL,
  `data_notificacao` DATETIME NOT NULL,
  `utilizador_id_utilizador` INT NOT NULL,
  PRIMARY KEY (`id_notificacao`),
  INDEX `fk_notificacao_utilizador1_idx` (`utilizador_id_utilizador` ASC) ,
  CONSTRAINT `fk_notificacao_utilizador1`
    FOREIGN KEY (`utilizador_id_utilizador`)
    REFERENCES `sara`.`utilizador` (`id_utilizador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sara`.`compatibilidade_modelo_equipamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sara`.`compatibilidade_modelo_equipamento` (
  `modelo_equipamento_1` INT NOT NULL,
  `modelo_equipamento_2` INT NOT NULL,
  PRIMARY KEY (`modelo_equipamento_1`, `modelo_equipamento_2`),
  INDEX `fk_modelo_equipamento_has_modelo_equipamento_modelo_equipam_idx` (`modelo_equipamento_2` ASC) ,
  INDEX `fk_modelo_equipamento_has_modelo_equipamento_modelo_equipam_idx1` (`modelo_equipamento_1` ASC) ,
  UNIQUE INDEX `modelo_equipamento_id_modelo_equipamento_UNIQUE` (`modelo_equipamento_1` ASC) ,
  UNIQUE INDEX `modelo_equipamento_id_modelo_equipamento1_UNIQUE` (`modelo_equipamento_2` ASC) ,
  CONSTRAINT `fk_modelo_equipamento_has_modelo_equipamento_modelo_equipamen1`
    FOREIGN KEY (`modelo_equipamento_1`)
    REFERENCES `sara`.`modelo_equipamento` (`id_modelo_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_modelo_equipamento_has_modelo_equipamento_modelo_equipamen2`
    FOREIGN KEY (`modelo_equipamento_2`)
    REFERENCES `sara`.`modelo_equipamento` (`id_modelo_equipamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
